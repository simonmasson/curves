use ark_ec::{bw6::BW6Parameters, AffineCurve, PairingEngine, ProjectiveCurve};
use ark_ff::{field_new, Field, One, PrimeField};
use ark_std::{rand::Rng, test_rng};

use crate::*;

use ark_algebra_test_templates::{curves::*, groups::*};

#[test]
fn test_g1_projective_curve() {
    curve_tests::<G1Projective>();

    sw_tests::<g1::Parameters>();
}

#[test]
fn test_g1_projective_group() {
    let mut rng = test_rng();
    let a: G1Projective = rng.gen();
    let b: G1Projective = rng.gen();
    group_test(a, b);
}

#[test]
fn test_g1_generator() {
    let generator = G1Affine::prime_subgroup_generator();
    assert!(generator.is_on_curve());
    assert!(generator.is_in_correct_subgroup_assuming_on_curve());
}

#[test]
fn test_g2_projective_curve() {
    curve_tests::<G2Projective>();

    sw_tests::<g2::Parameters>();
}

#[test]
fn test_g2_projective_group() {
    let mut rng = test_rng();
    let a: G2Projective = rng.gen();
    let b: G2Projective = rng.gen();
    group_test(a, b);
}

#[test]
fn test_g2_generator() {
    let generator = G2Affine::prime_subgroup_generator();
    assert!(generator.is_on_curve());
    assert!(generator.is_in_correct_subgroup_assuming_on_curve());
}

#[test]
fn test_from_sagemath() {
    let x = field_new!(Fq6, field_new!(Fq3,
        field_new!(Fq, "4299888316588777934288677787492042065147644974669011243874219449599160408676313088194520559231032583459529214743124049338101193565783106955603002157185962718901046466048082667909980448884614192110353772550673901281035430195956179"),
        field_new!(Fq, "5883808584483885977273006247255940900200000693779883620167146932170447939583401122740304651932527546092011608726884733872500637882371421404602625349472200600798971896063108176471262311196857409521809151925438535515209700738901570"),
        field_new!(Fq, "934763988504458968416866483830767200440768549105935908126093184344502193528229715307609518083720159724523416890725398775926934723033657404671571090148801041952812496446835277652485790568321664561025957891997443848056482914342492"),
        ),
        field_new!(Fq3, 
        field_new!(Fq, "6038489901735106239999317818778609527546619809349000202612657965445163910916806271105240018445887540898468964678518582889038691602509839444497521575714846148517149431540187821529423729559304109587013362449304064589555765981831586"),
        field_new!(Fq, "4055211677718714100122613644151112900990365549873157651183539782683042330695350198644020024764441836647960983638066047843192607847680521921207665774937036709410449775592343091058315466150441475189192412263456814369779599357736855"),
        field_new!(Fq, "4706060808928810110243033687222149646557764975833824608134322922776699677088976909328419929113709204911027092541524539114933080650613132515455714023263397679906765746332495711140960432813274564817284872791282909247687145743030426"),
        ),
        );
    let x_square = field_new!(Fq6, field_new!(Fq3,
        field_new!(Fq, "3409676932423048919890474497050019348343920392306507566036980001417714775590294852915720221950783888081076447487772656822464921469963048621348219800525834579444907012290070987662088562563158824481653645863277227897722638183469727"),
        field_new!(Fq, "4076637544115672438510787222990858163502146454102830178269032002161941700645370709056562115001488876187367545374572083766749486064080365115745637592337497019025894471767586583211217048341650850395347505828714486383521448619792215"),
        field_new!(Fq, "1506119352091500284726311567174830855089105225609915658552408406445053350748237645605351327623020562506630837008003849204770531568126995235471869254480372468168177114702350115910746238730815922416415936809687972518142745363569762"),
        ),
        field_new!(Fq3, 
        field_new!(Fq, "6691842824341051322470430313773631894091643277889030377879765710736768552636679666030987187753589503384414479221439190500880052159742244564128251615083509807289189591103365240024490800592638241877823998118391472358885870138593197"),
        field_new!(Fq, "4082663196796851422535912276159167107262756935808808795816550070215286311839696579791088001041029124134553782423753526948813048072041165046966539942762017095877960075370361164217603488024930887912544182411310473901458926403485988"),
        field_new!(Fq, "3653502977592164806136434328481231129609024094519767562321006399218950451803294327927159035061818296804213844456693657245976889631903875248431600333708159536815622102665657553554011484324939682547474333414496864396402664321181994"),
        ),
        );
    assert_eq!(x * x, x_square);
}

#[test]
fn test_expo_x() {
    let y = 
field_new!(Fq6, field_new!(Fq3,
field_new!(Fq, "1336159410890459126322428916843257864113493735425082598293661938757617761111571522496909605122971666213741460260827599202865919801924146091511016845289346627527710886431476911488407349576530715026108417689098514986564789013464557"),
field_new!(Fq, "5556091120730320944754192014328420612887340900131904442650729460078578980051701356093637970633843917874254523791355846685956765722925594788729617061362087036927684447543532198720659165632981471980053002605110681991809107719646044"),
field_new!(Fq, "630422133109280671691953343410462665082653443456879344380546291726058961571537851985405459234419554457771964995295355942709738119241703161213102572560689711764900342498798676253748441660296188835376113806676943002988690491833701"),
),
field_new!(Fq3, 
field_new!(Fq, "399481567576500573524617846610585930902377349192554697273643948708503900875213016421031684938110235175926381598157798106203323683688313624887077892592290940515545631678077554019590437333202983586743095259506146590086195673190766"),
field_new!(Fq, "1696062467537639586941893363325239093170829463539920657852924520252226076755758199314704384413426826454124729589286544251856757826275906682567333569663514577230440960443370907708162159519878143578212788860144762417025081077140221"),
field_new!(Fq, "2637598413007123765339206011685133152386733033033943545031917913351406423682438904666890862450133675873890306724267007399018436724729678492954078493400665491204032500095476277439322969647649197044137501353539423519002289265658157"),
),
);
    let y_u1 = 
field_new!(Fq6, field_new!(Fq3,
field_new!(Fq, "1825474833552274803398237812028787066880352564258314200064312969971542882992100681873018039650217981357778702706076387457145377169746028823328137494282974299892430792098066802891140410854032706224821020348250015224859704480885914"),
field_new!(Fq, "6205612998069567121547532997304286550302490192507211381103964498485436504081969426256047645193804826718648271310040759609910445739927676843100390110506587329772480580039990036428485171284440022689089784667044001435696757063818543"),
field_new!(Fq, "4487080300613241985526778114123994696506971893861252372254979516759865732788805927846627897953619843832155172997855010781267191774550905643823122589145019363099217363878113472928958271577010349516858774888519540815642877663603354"),
),
field_new!(Fq3, 
field_new!(Fq, "2865077792595767864288746234979039634048006984390120221217364453852960097837474089925827021746393573457170000379275136767883658620178345946144998543660334214903110091400741413164748207822489590576125381575797357859280488577030856"),
field_new!(Fq, "5485253410074547804971612620291977647981266629339137438193346350724218921274577556620830450579800391144311858799008474393985802625167335417124650869088868931227458246906893069648976935671007780040760513384789044240095198416003957"),
field_new!(Fq, "1402189848135566259345684681740704333456773112046069455311290604314354712424589589045551511038572635669026728863234340392735759755844640891270133088135633687623104887632643057177717531591921461447451362153547073679226858116268118"),
),
);
    let y_u2 = 
field_new!(Fq6, field_new!(Fq3,
field_new!(Fq, "480492232183017793632581620360521792312416727392380016742943121211098148895441292805075297861215894177132391971852154794361468750250078329202851587371226450870851969627579874790440060003422775751016011266037838452890032296622629"),
field_new!(Fq, "2858814457470079356754752898765673493574994542816608295289949604543582631091560736160478244005840633557609558422752368004760497597556002152808381868233051918954802198720880513478234680980346399280297314134440446323689071021396863"),
field_new!(Fq, "591273955734731262225418348969956854320996729406354967251815967549704157142006740474309671153709482189832457589405164663155145817342315151905070878591282389971138982316766846393308826895142980464727392055431219714001153054178088"),
),
field_new!(Fq3, 
field_new!(Fq, "2719449892811327796093451561530864172479108485917340708033771375037645611886391832113304755460824504121388810423213885089287594998700352563917760400809633556261155019682493006506497705047741273108377781289085039364996964593004338"),
field_new!(Fq, "5474746686693331331381557860887531703443905551868322165069264037081047203116546152383307685398036550849171627574328677993821344802570013647805124320405598571830766797190014517544998289533868220314640127299025993179612036946964219"),
field_new!(Fq, "446629321349309676043725090644383360671932575309061306267599682855834330350529941267083024830183762366441014800233925268658188894904422092847558449746422656678586429205068690236767785287302802006514958823564439751134441281514271"),
),
);
    let y_u3 = 
field_new!(Fq6, field_new!(Fq3,
field_new!(Fq, "4435146762568937515902870693195493770130776391585325854882190180318369355696980795689608950706723836807249300625766095146499443990375511511802149139698519214664391621760812196088633661368572830644070714279936444566610061716513647"),
field_new!(Fq, "4887803046528756565925771909661297775477572824322930422596398840342442920942605737087640834158986024420860406248627172890642931729235398619620899469205874479283267909688027495066289696712379177692685103988182681343627543378124673"),
field_new!(Fq, "2043083097056939165431720286386585697087007646073062161856117078921086016600933305501603274656366631714557622780799553414630349395924714560883964617624981541562427231896877828336413629908796568309874919283483686484899347140031023"),
),
field_new!(Fq3, 
field_new!(Fq, "5272179962738316200674749106031952761961127400932620763472145918577615239496706073910943459570190812263156417467873528371967837612733667171807162282117246389968131897682047769156484509162254556169485061924851088392120684969624699"),
field_new!(Fq, "1934607635410584201024425420094631193968570167080095734728931904192818870359053633993357111381614186758344398387643476046533450328521492649969345582941511295337120789554338393700020286955994230389804823222550261601695645296041384"),
field_new!(Fq, "1868663275079083218451482958986211818037824230613539422953115260207579008198158859371209083697046656997270157084021582166880160145082651948330801075022537712061843708501191427151186391788505240574158297425090995267656053334988755"),
),
);
    let y_to_x = y.cyclotomic_exp(crate::Parameters::X);
    assert_eq!(y_u1, y_to_x);
    let y_to_xm1 = y.cyclotomic_exp(crate::Parameters::X_MINUS_ONE);
    assert_eq!(y_u2, y_to_xm1);
    let y_to_xm1d3 = y.cyclotomic_exp(crate::Parameters::X_MINUS_ONE_DIV_THREE);
    assert_eq!(y_u3, y_to_xm1d3);
}

#[test]
fn test_conjugate() {
    let mut y = 
field_new!(Fq6, field_new!(Fq3,
field_new!(Fq, "1336159410890459126322428916843257864113493735425082598293661938757617761111571522496909605122971666213741460260827599202865919801924146091511016845289346627527710886431476911488407349576530715026108417689098514986564789013464557"),
field_new!(Fq, "5556091120730320944754192014328420612887340900131904442650729460078578980051701356093637970633843917874254523791355846685956765722925594788729617061362087036927684447543532198720659165632981471980053002605110681991809107719646044"),
field_new!(Fq, "630422133109280671691953343410462665082653443456879344380546291726058961571537851985405459234419554457771964995295355942709738119241703161213102572560689711764900342498798676253748441660296188835376113806676943002988690491833701"),
),
field_new!(Fq3, 
field_new!(Fq, "399481567576500573524617846610585930902377349192554697273643948708503900875213016421031684938110235175926381598157798106203323683688313624887077892592290940515545631678077554019590437333202983586743095259506146590086195673190766"),
field_new!(Fq, "1696062467537639586941893363325239093170829463539920657852924520252226076755758199314704384413426826454124729589286544251856757826275906682567333569663514577230440960443370907708162159519878143578212788860144762417025081077140221"),
field_new!(Fq, "2637598413007123765339206011685133152386733033033943545031917913351406423682438904666890862450133675873890306724267007399018436724729678492954078493400665491204032500095476277439322969647649197044137501353539423519002289265658157"),
),
);
    let y_conj = 
field_new!(Fq6, field_new!(Fq3,
field_new!(Fq, "1336159410890459126322428916843257864113493735425082598293661938757617761111571522496909605122971666213741460260827599202865919801924146091511016845289346627527710886431476911488407349576530715026108417689098514986564789013464557"),
field_new!(Fq, "5556091120730320944754192014328420612887340900131904442650729460078578980051701356093637970633843917874254523791355846685956765722925594788729617061362087036927684447543532198720659165632981471980053002605110681991809107719646044"),
field_new!(Fq, "630422133109280671691953343410462665082653443456879344380546291726058961571537851985405459234419554457771964995295355942709738119241703161213102572560689711764900342498798676253748441660296188835376113806676943002988690491833701"),
),
field_new!(Fq3, 
field_new!(Fq, "6491968816739231965872171835665071611577291563343595412240146211501119521368278719666651498351301452464938186155628815344958435436865934134462433806533010658436059467700431296352953194090393812365156605170462966252678717445877533"),
field_new!(Fq, "5195387916778092952454896318950418449308839448996229451660865639957397345487733536772978798875984861186739838164500069199305001294278341076782178129461787021721164138935137942664381471903718652373686911569824350425739832041928078"),
field_new!(Fq, "4253851971308608774057583670590524390092935879502206564481872246858216998561052831420792320839278011766974261029519606052143322395824569266395433205724636107747572599283032572933220661775947598907762199076429689323762623853410142"),
),
);
    y.conjugate();
    assert_eq!(y_conj, y);
}

#[test]
fn test_hard_part() {
    let x = 
    field_new!(Fq6, field_new!(Fq3,
    field_new!(Fq, "2867139593756158652323054692129664418384385486971526384566676865737417020066025651868592583267516730069782348651700940996512794582921674027849197087516633018990827241657953545914013391384624696155437093355399010108500764135744179"),
    field_new!(Fq, "5971053757740837271837676391576684814861630678306921983312202418397163703864823464711277220879408036059344948461819977986614258315424716752720314576988416522493971491977510191572543805412307512117700398917742018663874793745374938"),
    field_new!(Fq, "1589339375363770180660966463558945604409722682635338193685197158638098555788505180765632795879521011628544959967976076741577942040113365634533849416992877882874625787316179901652956330293405193788501230898544921518310930307799151"),
    ),
    field_new!(Fq3, 
    field_new!(Fq, "4750284923011249482912620507841771912845984355211155358032464599107897383073552783848607139536870636321456281506582125118942552565085984887269135738735618689978183988553015873283572596074929136858059589825198117013909491985790425"),
    field_new!(Fq, "833603739992672498065952443146765745261870970708780481132644502972962736535610084585368716382247257811340358509677396296543291042427580923334544160034162414400696484654821972209578372098739788551077132817453403897434492967879829"),
    field_new!(Fq, "6863422621382921769221848598779401139999987437325718314976808579171492469632692600767041238475567328491805605977914969824717960181699980494354935943353873962975460935048214933067717368383831811958875606147873123266108394753605520"),
    ),
    );
    let out = 
    field_new!(Fq6, field_new!(Fq3,
    field_new!(Fq, "1570281488093077678246356512061960024040213333859230438394161880175505649881478369175310043614883568622061854025308751395139924378085261183630479106218674636377985907068157250847517115963931045142881578501951031134365065810175451"),
    field_new!(Fq, "3654340222668158852901058183387085186803203883360814416561002493757268162456396640300012910623299394126623311966941893200465801743296637027676429183673805842140744071320357592851974459395182636564412725466056439372262199965112650"),
    field_new!(Fq, "2534609019000260766024691740185156627373616324309666897479374178212487148345937214006407900301968526418484771296499195839871533260789496422655368834096577801594667754589885229496665142764684507568064599968062876407717262380117532"),
    ),
    field_new!(Fq3, 
    field_new!(Fq, "1443096294486572123588633718254579464867055676285926499476684806563902155735814630202126063562577899050520952298279831282896250113341023166285215188738404183504730488087612165306371132535812278401089814253951026925959317922273340"),
    field_new!(Fq, "787876170206700555762477451537487184364073969426970129137618558631147503656677302320851248152775755797949308742477230844526649526487871011249774314584324539084233430496870343175389891509600239671603220001522772938554436942299948"),
    field_new!(Fq, "4515048127611884790312336604036032395968466455252591030788262905036166262786261636694506341505955381575228402125458839216032486123682458528512676443114967850988586623695222360352988910497762241271967703710700136882396222886435889"),
    ),
    );

    // A = m**(u-1)
    let mut a = x.cyclotomic_exp(crate::Parameters::X_MINUS_ONE);
    // A = A**(u-1)
    a = a.cyclotomic_exp(crate::Parameters::X_MINUS_ONE);
    // A = A * m.frobenius()        # A = m^((u-1)^2 + q)
    let mut mq = x.clone();
    mq.frobenius_map(1);
    a = a * mq;
    // B = A**(u+1) * m.conjugate() # B = m**((u^3-u^2-u) + (u+1)*q)
    let mut m_conj = x.clone();
    m_conj.conjugate();
    let b = a.cyclotomic_exp(crate::Parameters::X) * a * m_conj;
    // A = A**2 * A                 # A = m**(3*((u^2-2*u+1) + q))
    a = a.square() * a;
    // C = B**((u-1)//3)
    let c = b.cyclotomic_exp(crate::Parameters::X_MINUS_ONE_DIV_THREE);
    // D = C**(u-1)
    let d = c.cyclotomic_exp(crate::Parameters::X_MINUS_ONE);
    // E = (D**(u-1))**(u-1) * D
    let e = d
        .cyclotomic_exp(crate::Parameters::X_MINUS_ONE)
        .cyclotomic_exp(crate::Parameters::X_MINUS_ONE)
        * d;
    // D = D.conjugate()
    let mut d_conj = d.clone();
    d_conj.conjugate();
    // Fc = D * B
    let fc = d_conj * b;
    // G = E**(u+1) * Fc
    let g = e.cyclotomic_exp(crate::Parameters::X) * e * fc;
    // H = G * C                             # B^(t3/3)
    let h = g * c;
    // I = (G * D)**(u+1) * Fc.conjugate()   # B^r
    let mut fc_conj = fc.clone();
    fc_conj.conjugate();
    let i = (g * d_conj).cyclotomic_exp(crate::Parameters::X) * g * d_conj * fc_conj;
    // d1 = (ht+hy)//2
    let h_t = 13;
    let h_y = 9;
    let d1 = (h_t + h_y) / 2;
    let h_d1 = h.pow(&[d1]);
    let j = h_d1 * e;

    // K = J**2 * J * B * I**d2
    let d2 = (h_t * h_t + 3 * h_y * h_y) / 4;
    let i_d2 = i.pow(&[d2]);
    let k = j * j * j * b * i_d2;
    assert_eq!(k * a, out);
}

#[test]
fn test_first_chunk() {
    let y = 
    field_new!(Fq6, field_new!(Fq3,
    field_new!(Fq, "3407763210995323526356934962202432823130222841879482762720270692462877973825871884666761254129384030532188451321334433620089258878773144944674170779289511637039366877257141002250411310010369207690473974216056793095541541536120987"),
    field_new!(Fq, "489242301214129614180727964157194219420844627161574950330238746255284985498177490788519631522775242407876511630499763817269468423740454795545511943933662641881532515823350712585935614354648450903436010159489012232870520083554361"),
    field_new!(Fq, "4683960190241475964093082592767435404434022454784711774500293088302048983036028915802048861403332653966495832997398420831973146396181059412995371290866797393673262042481843146884076716589094956337688232696044039533495271390492496"),
    ),
    field_new!(Fq3, 
    field_new!(Fq, "4087564240481403640920699683114078949338588198798427360474988944691416529058835898842415148041060797592686981549428747223086263687500819924398531480453209395668061177131496272564776421169281574080344659281609002256080786671028852"),
    field_new!(Fq, "6210300546264457974600460440116397758456213736220230433267650529256616491615311953223191061543297901433512831286136138509148114334456619188518018758594711411159578989019213064949770451671252222813571413588920752757521410416359942"),
    field_new!(Fq, "1357176261294161440924342375013124797702729748871003221071448150900854147437528171684330244100352150658616258657866644702511831869631939724556022985247192454250750055369657195288901072780413594799286143489608253774838141161523762"),
    ),
    );
    let out = 
    field_new!(Fq6, field_new!(Fq3,
    field_new!(Fq, "1570281488093077678246356512061960024040213333859230438394161880175505649881478369175310043614883568622061854025308751395139924378085261183630479106218674636377985907068157250847517115963931045142881578501951031134365065810175451"),
    field_new!(Fq, "3654340222668158852901058183387085186803203883360814416561002493757268162456396640300012910623299394126623311966941893200465801743296637027676429183673805842140744071320357592851974459395182636564412725466056439372262199965112650"),
    field_new!(Fq, "2534609019000260766024691740185156627373616324309666897479374178212487148345937214006407900301968526418484771296499195839871533260789496422655368834096577801594667754589885229496665142764684507568064599968062876407717262380117532"),
    ),
    field_new!(Fq3, 
    field_new!(Fq, "1443096294486572123588633718254579464867055676285926499476684806563902155735814630202126063562577899050520952298279831282896250113341023166285215188738404183504730488087612165306371132535812278401089814253951026925959317922273340"),
    field_new!(Fq, "787876170206700555762477451537487184364073969426970129137618558631147503656677302320851248152775755797949308742477230844526649526487871011249774314584324539084233430496870343175389891509600239671603220001522772938554436942299948"),
    field_new!(Fq, "4515048127611884790312336604036032395968466455252591030788262905036166262786261636694506341505955381575228402125458839216032486123682458528512676443114967850988586623695222360352988910497762241271967703710700136882396222886435889"),
    ),
    );

    // first chunk
    let x = BW6_761::final_exponentiation_first_chunk(&y, &y.inverse().unwrap());

    // A = m**(u-1)
    let mut a = x.cyclotomic_exp(crate::Parameters::X_MINUS_ONE);
    // A = A**(u-1)
    a = a.cyclotomic_exp(crate::Parameters::X_MINUS_ONE);
    // A = A * m.frobenius()        # A = m^((u-1)^2 + q)
    let mut mq = x.clone();
    mq.frobenius_map(1);
    a = a * mq;
    // B = A**(u+1) * m.conjugate() # B = m**((u^3-u^2-u) + (u+1)*q)
    let mut m_conj = x.clone();
    m_conj.conjugate();
    let b = a.cyclotomic_exp(crate::Parameters::X) * a * m_conj;
    // A = A**2 * A                 # A = m**(3*((u^2-2*u+1) + q))
    a = a.square() * a;
    // C = B**((u-1)//3)
    let c = b.cyclotomic_exp(crate::Parameters::X_MINUS_ONE_DIV_THREE);
    // D = C**(u-1)
    let d = c.cyclotomic_exp(crate::Parameters::X_MINUS_ONE);
    // E = (D**(u-1))**(u-1) * D
    let e = d
        .cyclotomic_exp(crate::Parameters::X_MINUS_ONE)
        .cyclotomic_exp(crate::Parameters::X_MINUS_ONE)
        * d;
    // D = D.conjugate()
    let mut d_conj = d.clone();
    d_conj.conjugate();
    // Fc = D * B
    let fc = d_conj * b;
    // G = E**(u+1) * Fc
    let g = e.cyclotomic_exp(crate::Parameters::X) * e * fc;
    // H = G * C                             # B^(t3/3)
    let h = g * c;
    // I = (G * D)**(u+1) * Fc.conjugate()   # B^r
    let mut fc_conj = fc.clone();
    fc_conj.conjugate();
    let i = (g * d_conj).cyclotomic_exp(crate::Parameters::X) * g * d_conj * fc_conj;
    // d1 = (ht+hy)//2
    let h_t = 13;
    let h_y = 9;
    let d1 = (h_t + h_y) / 2;
    let h_d1 = h.pow(&[d1]);
    let j = h_d1 * e;

    // K = J**2 * J * B * I**d2
    let d2 = (h_t * h_t + 3 * h_y * h_y) / 4;
    let i_d2 = i.pow(&[d2]);
    let k = j * j * j * b * i_d2;
    assert_eq!(k * a, out);
}

#[test]
fn test_second_chunk_with_function() {
    let y = 
    field_new!(Fq6, field_new!(Fq3,
    field_new!(Fq, "2660937727249114557343083154159340313322910461479629716517113100576711797039001508652833099478497350470767682441512345746671329596129102483582485874405742048609142770353838246527759000784159530805466645449651968097267530678434149"),
    field_new!(Fq, "4894968045489766300930489808008486744970532392904684312679223423720525428443887396888184546204762612357423273780366734879055152314166988239441464951046172284507701989336248347693942421814608385115541199993831812179554041762952006"),
    field_new!(Fq, "1521011261526995342206708531548341145804546497496660905522760499905397620519607061166116343012468750767865411660604759115455552139249697768986033805175219147665189260512327386168977177679393147443480001935661676337032611109053958"),
    ),
    field_new!(Fq3, 
    field_new!(Fq, "3856654263607356634935121806804534969604564853660365485297664892102540468247161819647089277805972495651039753827772287771980573553582559753116552430783343934134239508873283110124746114520800217335650496310329182027480442336912338"),
    field_new!(Fq, "5639968646263412923849892921678261600278553818273440180695680949346927711895035077173314393418545360148965980681718552455817434197048849800240063949626615590659228419957852511121008974196474535601718102432086555439718902668460268"),
    field_new!(Fq, "5010320175531029491065609726214653088346474309276223619095848042757004557635217503814939436776652236114714514325153005713497670818994992333973502648980544012324308314277281163069402095906086095604300978620043109032699862403366723"),
    ),
    );
    let out = 
    field_new!(Fq6, field_new!(Fq3,
    field_new!(Fq, "1570281488093077678246356512061960024040213333859230438394161880175505649881478369175310043614883568622061854025308751395139924378085261183630479106218674636377985907068157250847517115963931045142881578501951031134365065810175451"),
    field_new!(Fq, "3654340222668158852901058183387085186803203883360814416561002493757268162456396640300012910623299394126623311966941893200465801743296637027676429183673805842140744071320357592851974459395182636564412725466056439372262199965112650"),
    field_new!(Fq, "2534609019000260766024691740185156627373616324309666897479374178212487148345937214006407900301968526418484771296499195839871533260789496422655368834096577801594667754589885229496665142764684507568064599968062876407717262380117532"),
    ),
    field_new!(Fq3, 
    field_new!(Fq, "1443096294486572123588633718254579464867055676285926499476684806563902155735814630202126063562577899050520952298279831282896250113341023166285215188738404183504730488087612165306371132535812278401089814253951026925959317922273340"),
    field_new!(Fq, "787876170206700555762477451537487184364073969426970129137618558631147503656677302320851248152775755797949308742477230844526649526487871011249774314584324539084233430496870343175389891509600239671603220001522772938554436942299948"),
    field_new!(Fq, "4515048127611884790312336604036032395968466455252591030788262905036166262786261636694506341505955381575228402125458839216032486123682458528512676443114967850988586623695222360352988910497762241271967703710700136882396222886435889"),
    ),
    );

    assert_eq!(out, BW6_761::final_exponentiation_last_chunk(&y, 13, 9));
}

#[test]
fn test_fe() {
    let y = 
    field_new!(Fq6, field_new!(Fq3,
    field_new!(Fq, "3407763210995323526356934962202432823130222841879482762720270692462877973825871884666761254129384030532188451321334433620089258878773144944674170779289511637039366877257141002250411310010369207690473974216056793095541541536120987"),
    field_new!(Fq, "489242301214129614180727964157194219420844627161574950330238746255284985498177490788519631522775242407876511630499763817269468423740454795545511943933662641881532515823350712585935614354648450903436010159489012232870520083554361"),
    field_new!(Fq, "4683960190241475964093082592767435404434022454784711774500293088302048983036028915802048861403332653966495832997398420831973146396181059412995371290866797393673262042481843146884076716589094956337688232696044039533495271390492496"),
    ),
    field_new!(Fq3, 
    field_new!(Fq, "4087564240481403640920699683114078949338588198798427360474988944691416529058835898842415148041060797592686981549428747223086263687500819924398531480453209395668061177131496272564776421169281574080344659281609002256080786671028852"),
    field_new!(Fq, "6210300546264457974600460440116397758456213736220230433267650529256616491615311953223191061543297901433512831286136138509148114334456619188518018758594711411159578989019213064949770451671252222813571413588920752757521410416359942"),
    field_new!(Fq, "1357176261294161440924342375013124797702729748871003221071448150900854147437528171684330244100352150658616258657866644702511831869631939724556022985247192454250750055369657195288901072780413594799286143489608253774838141161523762"),
    ),
    );
    let out = 
    field_new!(Fq6, field_new!(Fq3,
        field_new!(Fq, "1570281488093077678246356512061960024040213333859230438394161880175505649881478369175310043614883568622061854025308751395139924378085261183630479106218674636377985907068157250847517115963931045142881578501951031134365065810175451"),
        field_new!(Fq, "3654340222668158852901058183387085186803203883360814416561002493757268162456396640300012910623299394126623311966941893200465801743296637027676429183673805842140744071320357592851974459395182636564412725466056439372262199965112650"),
        field_new!(Fq, "2534609019000260766024691740185156627373616324309666897479374178212487148345937214006407900301968526418484771296499195839871533260789496422655368834096577801594667754589885229496665142764684507568064599968062876407717262380117532"),
        ),
        field_new!(Fq3, 
        field_new!(Fq, "1443096294486572123588633718254579464867055676285926499476684806563902155735814630202126063562577899050520952298279831282896250113341023166285215188738404183504730488087612165306371132535812278401089814253951026925959317922273340"),
        field_new!(Fq, "787876170206700555762477451537487184364073969426970129137618558631147503656677302320851248152775755797949308742477230844526649526487871011249774314584324539084233430496870343175389891509600239671603220001522772938554436942299948"),
        field_new!(Fq, "4515048127611884790312336604036032395968466455252591030788262905036166262786261636694506341505955381575228402125458839216032486123682458528512676443114967850988586623695222360352988910497762241271967703710700136882396222886435889"),
        ),
        );

    assert_eq!(out, BW6_761::final_exponentiation(&y));
}
#[test]
fn test_bilinearity() {
    let mut rng = test_rng();
    let a: G1Projective = rng.gen();
    let b: G2Projective = rng.gen();
    let s: Fr = rng.gen();

    let sa = a.mul(s.into_repr());
    let sb = b.mul(s.into_repr());

    let ans1 = BW6_761::pairing(sa, b);
    let ans2 = BW6_761::pairing(a, sb);
    let ans3 = BW6_761::pairing(a, b).pow(s.into_repr());

    assert_eq!(ans1, ans2);
    assert_eq!(ans2, ans3);

    assert_ne!(ans1, Fq6::one());
    assert_ne!(ans2, Fq6::one());
    assert_ne!(ans3, Fq6::one());

    assert_eq!(ans1.pow(Fr::characteristic()), Fq6::one());
    assert_eq!(ans2.pow(Fr::characteristic()), Fq6::one());
    assert_eq!(ans3.pow(Fr::characteristic()), Fq6::one());
}
